name: 'CircuitPython Library CI Tips'
description: 'Provides a single comment to the given PR with tips about fixing the CircuitPython library CI'
inputs:
  token:
    description: 'Token to use to post the comment'
    default: ${{ github.token }}
runs:
  using: "composite"
  steps:
    - uses: actions/github-script@v3
      id: set-result
      with:
        github-token: ${{ inputs.token }}
        script: |
          console.log(context)
          // Use a reaction to track if we've replied already. 201 is returned
          // the first time we set it. 200 if it was already created. This saves
          // us from having to look through all of the existing comments.
          const result = await github.rest.reactions.createForIssue({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: 'eyes'
          });
          if (result.status == 201) {
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for this pull request! Unfortunately, it looks like the automated continuous integration (CI) [test(s) failed](). These can be tricky to fix so we've written a guide on how to fix them locally. It has pages about [running pre-commit locally](https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/check-your-code) and another about [building the docs locally with sphinx](https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs). Thanks for contributing to CircuitPython! If you have more questions, feel free to join [the Adafruit Discord](https://adafru.it/discord) and post in #circuitpython-dev.'
            });
          }
